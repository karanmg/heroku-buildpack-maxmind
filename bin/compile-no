#!/usr/bin/env bash

set -e # bail if any command fails
#set -x # debug

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

if [ ! -f "$ENV_DIR/MAXMIND_KEY" ]; then
	echo "-----> You must define the environment variable MAXMIND_KEY with your license key."

	exit 1
fi

MAXMIND_KEY=`cat $ENV_DIR/MAXMIND_KEY`
MAXMIND_EDITIONS=`cat $ENV_DIR/MAXMIND_EDITIONS`

mkdir -p $CACHE_DIR

download(){
	EDITION=$1

  URL="https://download.maxmind.com/app/geoip_download?edition_id=${EDITION}&suffix=tar.gz&license_key=$MAXMIND_KEY"
	TAR="$CACHE_DIR/$EDITION.tar.gz"
	TAR_NEW="$CACHE_DIR/$EDITION-new.tar.gz"
	DB="$CACHE_DIR/$EDITION.mmdb"

	if [ -f $TAR ]; then
    response=$(curl --silent --head $URL | tee \
                      >(awk '/HTTP\/2 /{print $0}') \
                      >(awk '/^[Ll]ast-[Mm]odified/{print $0}') \
                      > /dev/null )
    code=$(echo "$response" | grep 'HTTP\/2' | sed 's/^HTTP\/2 //')
    if [[ "$code" != *"200"* ]]; then
      echo "WARNING $EDITION: Unable to reach Maxmind, received: $code"
      newer_version=false
    else
      modified=$(echo "$response" | grep '[Ll]ast-[Mm]odified' |  sed 's/^[Ll]ast-[Mm]odified: //')
      echo "-----> $EDITION: modified $modified"
      remote_ctime=$(date --date="$modified" +%s)
      local_ctime=$(stat -c %y "$TAR")
      local_ctime=$(date --date="$local_ctime" +%s)
      if [ $local_ctime -lt $remote_ctime ]; then
        newer_version=true
      fi
    fi
  fi

  if [ ! -f $TAR ] || [ $newer_version ]; then
    if [ $newer_version ]; then
      echo "-----> $EDITION: Found newer version of the TAR file on the server, downloading."
    else
      echo "-----> $EDITION: Database does not exist in cache, downloading."
    fi

    curl -o $TAR_NEW -L $URL
  else
    echo "-----> $EDITION: Database already exists in cache and it's up to date."
    TAR_NEW=$TAR
  fi

  echo "-----> $EDITION: Extracting $TAR_NEW"
  tar -zxvf $TAR_NEW -C $CACHE_DIR --no-anchored --strip-components=1 "$EDITION.mmdb"
  if [ $? -ne 0 ]; then
    if [ $newer_version ]; then
      echo "-----> WARNING $EDITION: Could not download TAR file! Using old cached version."
    else
      echo "-----> ERROR $EDITION: Could not download TAR file! Cannot continue!!!"
      exit 1
    fi
  fi

	OUTPUT="$BUILD_DIR/$SAVE"
	echo "-----> $EDITION: Moving $DB to $OUTPUT"
	mv $DB $OUTPUT
	mv $TAR_NEW $TAR || true
}

IFS=', ' read -a editions <<< "$MAXMIND_EDITIONS"

for edition in "${editions[@]}"
do
    download "$edition"
done